apply plugin: 'com.android.application'

def wx_pay_app_id = WX_PAY_APP_ID
def new_customer_complaint = NEW_CUSTOMER_COMPLAINT

android {
    signingConfigs {
        config {
            keyAlias '普及科技'
            keyPassword 'pujikeji'
            storeFile file('D:/keystore/HaChiKeyStore.jks')
            storePassword 'pujikeji'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.customview"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 106
        versionName '1.2.3'
    }
    flavorDimensions "money", "goods"
    productFlavors {
        companyAAA {
            dimension "money"
            buildConfigField "String", "FLAVOR_NAME", "\"channelBB\""
        }
        HHHHH {
            dimension "goods"
            buildConfigField "String", "FLAVOR_NAME", "\"channelAAA\""
        }
        ABBB {
            dimension "money"
            buildConfigField "String", "FLAVOR_NAME", "\"channelAA\""
        }


    }
    //构建类型，即使没有debug和release也会默认添加上
    //其中除了debug模式，其它的模式都需要显示的指定签名信息，签名信息在signingConfigs里面
    buildTypes {
        debug {
            //这些变量只会在debug的时候才有
            buildConfigField 'int', 'HTTP_TYPE', BUILD_ENVIRONMENT
            buildConfigField 'int', 'WX_PAY', wx_pay_app_id
            buildConfigField 'boolean', 'NEW_CUSTOMER_COMPLAINT', new_customer_complaint
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        mytest {
            //这些变量只会在mytest的时候才有
            buildConfigField 'int', 'HTTP_TYPE', BUILD_ENVIRONMENT
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }


    dynamicFeatures = []
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    implementation 'com.google.dagger:dagger:2.22.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.22.1'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.dagger:dagger:2.23.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.23.2'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.blankj:utilcode:1.18.0'

    implementation 'com.yanzhenjie.permission:support:2.0.1'

    implementation 'com.zhy:autolayout:1.4.5'
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'


}
repositories {
    mavenCentral()
}
